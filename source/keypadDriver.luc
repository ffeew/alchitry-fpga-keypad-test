module keypadDriver (
    input clk,
    input rst,

    input in_col[4],
    input in_row[4],

    output out_col[4],
    output out_row[4],

    output button_0,
    output button_1,
    output button_2,
    output button_3,
    output button_4,
    output button_5,
    output button_6,
    output button_7,
    output button_8,
    output button_9,

    output button_a,
    output button_b,
    output button_c,
    output button_d,

    output button_asterisk,
    output button_hash
  ) {
    
  dff row(.clk(clk), .rst(rst), #INIT(0));

  always {
    button_0 = 0;
    button_1 = 0;
    button_2 = 0;
    button_3 = 0;
    button_4 = 0;
    button_5 = 0;
    button_6 = 0;
    button_7 = 0;
    button_8 = 0;
    button_9 = 0;

    button_a = 0;
    button_b = 0;
    button_c = 0;
    button_d = 0;

    button_asterisk = 0;
    button_hash = 0;

    out_col = 4h0;
    out_row = 4h0;

    row.d = 0;
    
    if(row.q == 0) {
      out_col = 4hF;
      case(in_row) {
        4b1000:
          row.d = 1;
        4b0100:
          row.d = 2;
        4b0010:
          row.d = 3;
        4b0001:
          row.d = 4;
      }
    }
    else {
      out_row = 4hF;
      case(in_col) {
        4b1000:
          button_1 = row.q == 1;
          button_4 = row.q == 2;
          button_7 = row.q == 3;
          button_asterisk = row.q == 4;
        4b0100:
          button_2 = row.q == 1;
          button_5 = row.q == 2;
          button_8 = row.q == 3;
          button_0 = row.q == 4;
        4b0010:
          button_3 = row.q == 1;
          button_6 = row.q == 2;
          button_9 = row.q == 3;
          button_hash = row.q == 4;
        4b0001:
          button_a = row.q == 1;
          button_b = row.q == 2;
          button_c = row.q == 3;
          button_d = row.q == 4;
      }
    }
  }
}