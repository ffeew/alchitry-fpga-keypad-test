/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module keypadDriver_2 (
    input clk,
    input rst,
    input [3:0] in_col,
    input [3:0] in_row,
    output reg [3:0] out_col,
    output reg [3:0] out_row,
    output reg button_0,
    output reg button_1,
    output reg button_2,
    output reg button_3,
    output reg button_4,
    output reg button_5,
    output reg button_6,
    output reg button_7,
    output reg button_8,
    output reg button_9,
    output reg button_a,
    output reg button_b,
    output reg button_c,
    output reg button_d,
    output reg button_asterisk,
    output reg button_hash
  );
  
  
  
  reg M_row_d, M_row_q = 1'h0;
  
  always @* begin
    M_row_d = M_row_q;
    
    button_0 = 1'h0;
    button_1 = 1'h0;
    button_2 = 1'h0;
    button_3 = 1'h0;
    button_4 = 1'h0;
    button_5 = 1'h0;
    button_6 = 1'h0;
    button_7 = 1'h0;
    button_8 = 1'h0;
    button_9 = 1'h0;
    button_a = 1'h0;
    button_b = 1'h0;
    button_c = 1'h0;
    button_d = 1'h0;
    button_asterisk = 1'h0;
    button_hash = 1'h0;
    out_col = 4'h0;
    out_row = 4'h0;
    M_row_d = 1'h0;
    if (M_row_q == 1'h0) begin
      out_col = 4'hf;
      
      case (in_row)
        4'h8: begin
          M_row_d = 1'h1;
        end
        4'h4: begin
          M_row_d = 2'h2;
        end
        4'h2: begin
          M_row_d = 2'h3;
        end
        4'h1: begin
          M_row_d = 3'h4;
        end
      endcase
    end else begin
      out_row = 4'hf;
      
      case (in_col)
        4'h8: begin
          button_1 = M_row_q == 1'h1;
          button_4 = M_row_q == 2'h2;
          button_7 = M_row_q == 2'h3;
          button_asterisk = M_row_q == 3'h4;
        end
        4'h4: begin
          button_2 = M_row_q == 1'h1;
          button_5 = M_row_q == 2'h2;
          button_8 = M_row_q == 2'h3;
          button_0 = M_row_q == 3'h4;
        end
        4'h2: begin
          button_3 = M_row_q == 1'h1;
          button_6 = M_row_q == 2'h2;
          button_9 = M_row_q == 2'h3;
          button_hash = M_row_q == 3'h4;
        end
        4'h1: begin
          button_a = M_row_q == 1'h1;
          button_b = M_row_q == 2'h2;
          button_c = M_row_q == 2'h3;
          button_d = M_row_q == 3'h4;
        end
      endcase
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_row_q <= 1'h0;
    end else begin
      M_row_q <= M_row_d;
    end
  end
  
endmodule
